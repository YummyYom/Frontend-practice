import { CessionData } from '../interfaces/DataTemplates/CessionData';
import { FamDefData } from '../interfaces/DataTemplates/FamDefData';
import { ModalCodeDescValues } from './ModalBase';

//Soon to be completely obsolete, old placeholder data retrieving

function ParseCess(no_cess: string): Promise<CessionData> {
  //TODO:receive from endpoint
  // make generic
  const singleCessJson =
    '[{"NO_SCHED":1,"TYP_SCHED":"SCC","AMT_REF_SCHED":500000,"FREQ_SCHED":1,"NO_CESS":-123,"NO_BEN_CESS":1,"DT_EFF_BEN":"2021-03-24T00:00:00","TYP_GEN_ON":"N","SEQ_SCHEDULE":[{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":1,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":248.39},{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":4,"SEQ_SCHED_BEN_PER":2,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":719.46},{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":4,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":585.28},{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":3,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":471.08},{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":2,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":368.3},{"NO_SCHED":1,"SEQ_SCHED_BEN_DU":6,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":500000,"PRM_SCHED_BEN":365.3}],"FAM_DEF":[{"CD_TYP_FTT_BEN":"COL","NO_FTT_BEN":21029,"CD_METH_FTT_BEN":3,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":21042,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"CPA","NO_FTT_BEN":21072,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"OOR","NO_FTT_BEN":21032,"CD_METH_FTT_BEN":6,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"PRM","NO_FTT_BEN":21145,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316}]},{"NO_SCHED":4,"TYP_SCHED":"SCC","AMT_REF_SCHED":600000,"FREQ_SCHED":1,"NO_CESS":-456,"NO_BEN_CESS":1,"DT_EFF_BEN":"2023-03-24T00:00:00","TYP_GEN_ON":"N","SEQ_SCHEDULE":[{"NO_SCHED":4,"SEQ_SCHED_BEN_DU":1,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":600000,"PRM_SCHED_BEN":1248.39},{"NO_SCHED":4,"SEQ_SCHED_BEN_DU":4,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":600000,"PRM_SCHED_BEN":1585.28},{"NO_SCHED":4,"SEQ_SCHED_BEN_DU":3,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":600000,"PRM_SCHED_BEN":1471.08},{"NO_SCHED":4,"SEQ_SCHED_BEN_DU":2,"SEQ_SCHED_BEN_PER":1,"AMT_SCHED_BEN":600000,"PRM_SCHED_BEN":1368.3}],"FAM_DEF":[{"CD_TYP_FTT_BEN":"COL","NO_FTT_BEN":41029,"CD_METH_FTT_BEN":3,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":41042,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"CPA","NO_FTT_BEN":41072,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"OOR","NO_FTT_BEN":41032,"CD_METH_FTT_BEN":6,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"PRM","NO_FTT_BEN":41145,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316}]}]';
  const fullCessionObjs = JSON.parse(singleCessJson) as CessionData[];

  const fullCessObj = fullCessionObjs.filter(cess => cess.cessionId.toString() == '-' + no_cess)[0];

  if (fullCessObj === undefined) {
    // return Promise.reject("CessNo not found");
    return Promise.reject(new Error('Cession not found'));
  }

  return Promise.resolve(fullCessObj);
}

function ParseFamDefs(no_ftt_list: string): Promise<FamDefData[]> {
  const famDefSetJson =
    '[{"CD_TYP_FTT_BEN":"XXX","NO_FTT_BEN":21029,"CD_METH_FTT_BEN":3,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":21042,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"CPA","NO_FTT_BEN":21072,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"OOR","NO_FTT_BEN":21032,"CD_METH_FTT_BEN":6,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"PRM","NO_FTT_BEN":21145,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316}]';
  const fullFamDefObjs = JSON.parse(famDefSetJson) as FamDefData[];

  const fullFamObjs = fullFamDefObjs.filter(famList => no_ftt_list.split(',').includes(famList.noFttBen.toString()));
  return Promise.resolve(fullFamObjs);
}

function ParseAllFamPerType(typFam: string): Promise<ModalCodeDescValues[]> {
  const famDefSetJson =
    '[{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":21029,"CD_METH_FTT_BEN":3,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":21042,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"COM","NO_FTT_BEN":21072,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"PRM","NO_FTT_BEN":21032,"CD_METH_FTT_BEN":6,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316},{"CD_TYP_FTT_BEN":"PRM","NO_FTT_BEN":21145,"CD_METH_FTT_BEN":1,"METH_FTT_ARG1":null,"METH_FTT_ARG2":null,"METH_FTT_ARG3":null,"METH_FTT_ARG4":null,"METH_FTT_ARG5":null,"DT_EFF_COND":"2021-01-01T00:00:00","CD_METHOD_COND":"ORI","DT_ENRG_COND":"2020-09-02T09:20:50","ID_BEN":862316}]';
  const fullFamDefObjs = JSON.parse(famDefSetJson) as FamDefData[];

  const fullFamObjs = fullFamDefObjs
    .filter(famObj => famObj.cdTypFttBen === typFam)
    .map(f => {
      return {
        CODE: f.noFttBen.toString(),
        DESCRIPTION: f.cdTypFttBen,
      } as ModalCodeDescValues;
    });
  return Promise.resolve(fullFamObjs);
}

function ParseFamTypes(): Promise<ModalCodeDescValues[]> {
  return Promise.resolve([
    { CODE: 'PRM', DESCRIPTION: 'PREMIUMS (BASE,WP,ADB)' },
    { CODE: 'PF1', DESCRIPTION: 'PREMIUM FACTOR 1' },
    { CODE: 'PF2', DESCRIPTION: 'PREMIUM FACTOR 2' },
    { CODE: 'PF3', DESCRIPTION: 'PREMIUM FACTOR 3' },
    { CODE: 'PF4', DESCRIPTION: 'PREMIUM FACTOR 4' },
  ] as ModalCodeDescValues[]);
}

export { ParseCess, ParseFamDefs, ParseFamTypes, ParseAllFamPerType };
